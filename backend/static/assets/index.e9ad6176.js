var e=Object.defineProperty,t=Object.defineProperties,n=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,i=(t,n,r)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[n]=r,s=(e,t)=>{for(var n in t||(t={}))o.call(t,n)&&i(e,n,t[n]);if(r)for(var n of r(t))a.call(t,n)&&i(e,n,t[n]);return e},l=(e,r)=>t(e,n(r));import{r as m,R as c,a as u}from"./vendor.1a01e810.js";const d=e=>"id"in e,p=e=>d(e)?e.id:e.temporaryId,f=(e,t)=>e.filter((e=>p(e)!==t)),h={isCreatedPerson:d,getPersonId:p,getPersonServerId:e=>d(e)?e.id:void 0,removePerson:(e,t)=>f(e,p(t)),removePersonById:f,updatePerson:(e,t)=>e.map((e=>p(e)===t.id?s(s({},e),t):e))},b=()=>fetch("/api/persons").then((e=>e.json())).then((e=>{if(Array.isArray(e)&&"name"in e[0])return e;throw new Error("API did not returned compatible response")})),v=e=>fetch("/api/persons",{method:"POST",body:JSON.stringify(e),headers:{Accept:"application/json","Content-Type":"application/json"}}).then((e=>e.json())),y=e=>e?fetch(`/api/persons/${e}`,{method:"DELETE"}).then((e=>{if(e.ok)return e;throw e.status})):Promise.resolve(),E=e=>fetch(`/api/persons/${e.id}`,{method:"PUT",body:JSON.stringify(e)}).then((e=>{if(e.ok)return e;throw"Update failed"}));function P(){const[e,t]=function(){const[e,t]=m.exports.useState([]);return m.exports.useEffect((()=>{b().then((e=>t(e)))}),[]),[e,t]}(),[n,r]=m.exports.useState({name:"",number:""}),[o]=(a=e.map((({name:e})=>e)),[e=>a.includes(e)]);var a;const[i,u]=m.exports.useState(null),[d,p]=m.exports.useState(null),f=e=>{u(e),setTimeout((()=>u(null)),2e3)},P=n=>{const r=confirm(`Should ${n.name} be deleted ?`),o=h.getPersonServerId(n);r&&(t(h.removePerson(e,n)),y(o).catch((r=>{if(console.log(r),404===r)return o=`${n.name} was already removed from the server`,p(o),void setTimeout((()=>p(null)),2e3);var o;t(e)})))};return c.createElement("div",null,c.createElement("h2",null,"Phonebook"),c.createElement("form",{onSubmit:a=>{if(a.preventDefault(),o(n.name)){if(!confirm(`${n.name} is already in teh phone book, replace the old number with a new one ?`))return;const o=e.find((e=>e.name===n.name));if(o&&h.isCreatedPerson(o)){const a=s(s({},o),n);return t(h.updatePerson(e,a)),void E(a).then((()=>r({name:"",number:""}))).then((()=>f(`${a.name} has been updated`))).catch((()=>t(e)))}}const i=1e3*Math.random()+"",m=l(s({},n),{temporaryId:i});t(e.concat(m)),r({name:"",number:""}),v(n).then((e=>t((t=>h.removePersonById(t,i).concat(e))))).then((()=>f(`${n.name} has been created`)))}},c.createElement("div",null,"name: ",c.createElement("input",{value:n.name,onChange:e=>{const t=e.target.value;r(l(s({},n),{name:t}))}})),c.createElement("div",null,"number: ",c.createElement("input",{value:n.number,onChange:e=>{const t=e.target.value;r(l(s({},n),{number:t}))}})),c.createElement("div",null,c.createElement("button",{type:"submit"},"add"))),c.createElement("h2",null,"Numbers"),i&&c.createElement("div",{className:"notification notification_success"},i),d&&c.createElement("div",{className:"notification notification_error"},d),e.map((e=>c.createElement("div",{key:e.name,style:{display:"flex"}},c.createElement("div",null,e.name),c.createElement("div",null,e.number),c.createElement("button",{onClick:()=>P(e),type:"button"},"Delete")))))}u.render(c.createElement(c.StrictMode,null,c.createElement(P,null)),document.getElementById("root"));
